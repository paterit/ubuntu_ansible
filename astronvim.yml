- name: Install AstroNVim
  hosts: localhost

  tasks:
    - name: Check if nerd-fonts is installed
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          fc-list | grep Inconsolata
        executable: /bin/bash
      register: nerd_fonts_installed
      changed_when: false
      failed_when: false

    - name: Install nerd-fonts
      when: nerd_fonts_installed.stdout == ""
      block:
        - name: Create ~/.local/share/fonts/NerdFonts
          ansible.builtin.file:
            path: ~/.local/share/fonts/NerdFonts
            state: directory
            mode: "0755"

        - name: Download and unpack Inconsolata nerd-fonts
          ansible.builtin.unarchive:
            src: https://github.com/ryanoasis/nerd-fonts/releases/latest/download/Inconsolata.tar.xz
            dest: ~/.local/share/fonts/NerdFonts
            remote_src: true

        - name: Update font cache
          ansible.builtin.shell:
            cmd: fc-cache -f -v
            executable: /bin/bash
          changed_when: false
          failed_when: false

    - name: Check if NeoVim is installed
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          ~/apps/nvim/nvim.appimage --version
        executable: /bin/bash
      register: nvim_installed
      changed_when: false
      failed_when: false

    - name: Install NeoVim as appimage
      when: nvim_installed.rc != 0
      block:

        - name: Enable universe repository
          become: true
          ansible.builtin.apt_repository:
            repo: "{{ item }}"
            update_cache: true
          loop:
            - "deb http://archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }} universe"
            - "deb http://archive.ubuntu.com/ubuntu/ {{ ansible_distribution_release }}-updates universe"
            - "deb http://security.ubuntu.com/ubuntu/ {{ ansible_distribution_release }}-security universe"

        - name: Install libfuse2 # don't install fuse on >= 22.04
          become: true
          ansible.builtin.apt:
            name: libfuse2
            state: present

        - name: Create ~/apps/nvim
          ansible.builtin.file:
            path: ~/apps/nvim
            state: directory
            mode: "0755"

        - name: Download NeoVim appimage
          ansible.builtin.get_url:
            url: https://github.com/neovim/neovim/releases/download/stable/nvim.appimage
            dest: ~/apps/nvim/nvim.appimage
            mode: "0764"

        - name: Add nvim alias
          ansible.builtin.lineinfile:
            path: ~/.zshrc
            line: "alias nvim='~/apps/nvim/nvim.appimage'"
            state: present


    - name: Install treesitter
      block:
        - name: Install apt packages
          become: true
          ansible.builtin.apt:
            name:
              - ripgrep
            state: present

        - name: Install cargo packages
          community.general.cargo:
            name:
              - watchexec-cli
              - tree-sitter-cli
            locked: true
            state: present
            executable: ~/.cargo/bin/cargo

        - name: Install lazygit
          ansible.builtin.shell:
            cmd: |
              set -o pipefail
              LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
              curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
              tar xf lazygit.tar.gz lazygit
              sudo install lazygit /usr/local/bin
            executable: /bin/bash
            chdir: /tmp
            creates: /usr/local/bin/lazygit

    - name: Clone my AstroNVim config
      block:
        - name: Clone AstroNVim # noqa: latest
          ansible.builtin.git:
            repo: https://github.com/AstroNvim/AstroNvim
            dest: ~/.config/nvim
            depth: 1
            update: false

        - name: Clone my AstroNVim config # noqa: latest
          ansible.builtin.git:
            repo: https://github.com/paterit/astronvim-config.git
            dest: ~/.config/nvim/lua/user


    - name: Install python for NeoVim
      block:
        - name: Install pyenv version for NeoVim
          ansible.builtin.shell:
            cmd: |
              . ~/.zshrc && pyenv virtualenv 3.11 py3nvim
              . ~/.pyenv/versions/py3nvim/bin/activate && python3 -m pip install pynvim
            executable: /bin/zsh
            creates: ~/.pyenv/versions/py3nvim

        - name: Add py3nvim to neovim config
          ansible.builtin.lineinfile:
            path: ~/.config/nvim/init.lua
            line: "vim.g.python3_host_prog = '/home/{{ ansible_user_id }}/.pyenv/versions/py3nvim/bin/python3'"
            state: present


    - name: Install Perl for NeoVim
      block:
        - name: Install cpan App::cpanminus
          become: true
          ansible.builtin.shell:
            cmd: PERL_MM_USE_DEFAULT=1 cpan App::cpanminus
            creates: ~/perl5/bin/cpanm
            executable: /bin/bash

        - name: Add cpanm to zsh
          ansible.builtin.blockinfile:
            path: ~/.zshrc
            marker: "# {mark} CPANM ANSIBLE MANAGED BLOCK"
            block: |
              export PNPM_HOME="/home/wsemik/.local/share/pnpm"
              case ":$PATH:" in
                *":$PNPM_HOME:"*) ;;
                *) export PATH="$PNPM_HOME:$PATH" ;;
              esac
            state: present

        - name: Install neovim cpanm module
          become: true
          ansible.builtin.shell:
            cmd: |
              . ~/.zshrc && cpanm -n Neovim::Ext
            executable: /bin/zsh
          changed_when: false
          failed_when: false

    - name: Install Rubby for NeoVim
      block:
        - name: Install rubby from apt
          become: true
          ansible.builtin.apt:
            name:
              - ruby-full
            state: present

        - name: Check if neovim gem is installed
          become: true
          ansible.builtin.shell:
            cmd: |
              set -o pipefail
              gem list | grep neovim
            executable: /bin/zsh
          register: neovim_gem_installed
          changed_when: false
          failed_when: false

        - name: Install neovim gem
          when: neovim_gem_installed.stdout == ""
          become: true
          ansible.builtin.shell:
            cmd: "sudo gem install neovim"
            executable: /bin/zsh
          changed_when: false
          failed_when: false

    - name: Check if neovim for node is installed
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          npm list -g --depth=0 | grep neovim
        executable: /bin/zsh
      register: neovim_node_installed
      changed_when: false
      failed_when: false

    - name: Install NodeJS for NeoVim
      when: neovim_node_installed.stdout == ""
      ansible.builtin.shell:
        cmd: |
          . ~/.zshrc && npm install -g neovim
        executable: /bin/zsh
      changed_when: false
      failed_when: false

    - name: Install gdu
      become: true
      block:
        - name: Add ppa for gdu
          ansible.builtin.apt_repository:
            repo: ppa:daniel-milde/gdu
            update_cache: true

        - name: Install gdu
          ansible.builtin.apt:
            name:
              - gdu
            state: present

    - name: Install bottom
      become: true
      ansible.builtin.apt:
        deb: https://github.com/ClementTsang/bottom/releases/download/0.9.6/bottom_0.9.6_amd64.deb
        state: present
